[{"content":"Не думаю, что часто говорила об этом, но вообще я фанатка Netlify. Тем не менее, для большинства людей набор фич у этой платформы - явный перебор, а вот бесплатный тарифный план режет даже количество времени на ваши билды в месяц - впрочем, вы вряд ли столкнётесь с этой проблемой, по крайней мере, если не используете webpack :)\nВ свою очередь, Github Pages полностью бесплатный, но вот встроенные в него возможности CI подкачали — если только вы не используете исключительно Jekyll, который идёт из коробки. Попробуем нарастить этот функционал руками?\nШаг 0. Пререквизиты Создадим репозиторий для исходников, или используем имеющийся — имя может быть любым. Может быть приватным — у этого блога именно такой. Создадим репозиторий для github pages: \u0026lt;username\u0026gt;.github.io. Должен быть публичным. Заходим в настройки репозитория и выставляем Source = Deploy from a branch, branch = main, папка = /docs Согласно скриншоту\nШаг 1. Деплой Для того, чтобы ваш сайт появился на GH Pages, нужно залить всё его содержимое в репозиторий. В нашем случае, в ветку main, папку /docs. Давайте напишем скрипт, который это сделает. Предположим, что наш сайт собирается командой ./build.sh в корне репозитория с ним. Тогда:\n#!/bin/bash set -ex ./build.sh TMP_DIR=$(mktemp -d) THIS_DIR=$(pwd) function cleanup { rm -rf \u0026#34;${TMP_DIR}\u0026#34; } trap cleanup EXIT ( cd \u0026#34;${TMP_DIR}\u0026#34; # здесь естественно заменяете на адрес своего github.io-репозитория git clone --depth=1 git@github.com:lerarosalene/lerarosalene.github.io.git cd lerarosalene.github.io rm -rf docs/ mkdir -p docs/ cp -r \u0026#34;${THIS_DIR}/public/.\u0026#34; docs/ touch docs/.nojekyll # to prevent Jekyll from running git add docs git -c user.name=\u0026#34;GH Actions\u0026#34; -c user.email=\u0026#34;\u0026lt;\u0026gt;\u0026#34; commit -m \u0026#34;deploy: $(date -R)\u0026#34; --allow-empty # -c user.name/user.email понадобятся на шаге 2 git push --force ) Если у вас всё в порядке с SSH-ключами, то проблем возникнуть не должно.\nШаг 2. Тоже деплой, но автоматически А что, если мы хотим, чтобы это всё исполнялось само по себе после обновления мастера в нашей репе с исходниками сайта? Тогда на помощь придут Github Actions.\nNetlify right now\nСоздаём в нашей репе для исходников (не той, что \u0026lt;username\u0026gt;.githug.io) файл .github/workflows/deploy-gh-pages.yaml.\nname: deploy-gh-pages on: push: bracnhes: - main jobs: deploy: runs-on: ubuntu-latest steps: - uses: actions/checkout@v3 - run: bash deploy-gh-pages.sh Пушим. Смотрим как action запускается. Смотрим, как он падает. Стоп, что? А что, у раннера должны были быть ключи, чтобы пушить к вам в репу? :)\nИтак.\nВыходим из репозитория куда-то в личные папки. Мы НЕ хотим случайно отправить ключики прямо в репозиторий, да в открытый-то доступ :) Генерируем публичный и приватный ключ командой ssh-keygen -f gh-actions Добавляем публичный ключ (содержимое файла gh-actions.pub) в deploy keys вашей репы github.io (Settings -\u0026gt; Deploy keys). Имя может быть любым Добавляем приватный ключ (содержимое файла gh-actions) в секреты вашей репы с исходниками. (Settings -\u0026gt; Secrets -\u0026gt; Actions) с именем GH_PAGES_DEPLOY Теперь в файл .github/workflows/deploy-gh-pages.yaml добавляем в jobs.deploy.steps\n- uses: webfactory/ssh-agent@v0.5.4 with: ssh-private-key: ${{ secrets.GH_PAGES_DEPLOY }} Должно получиться так:\nname: deploy-gh-pages on: push: bracnhes: - main jobs: deploy: runs-on: ubuntu-latest steps: - uses: actions/checkout@v3 - uses: webfactory/ssh-agent@v0.5.4 with: ssh-private-key: ${{ secrets.GH_PAGES_DEPLOY }} - run: bash deploy-gh-pages.sh Вот теперь всё должно работать.\nFast Q\u0026amp;A Q: Зачем две репы? A: Исключительно по эстетическим причинам и чтобы иметь возможность держать исходники приватными. Если хотите, можете слить в одну по образу и подобию - только для хостинга используйте не основную ветку, чтобы пушами в неё не триггерить ребилды по кругу :)\nQ: У меня не собирается, и ошибка не в SSH-ключах, а до того. A: Возможно, вы не добавили нужные зависимости в jobs.deploy.steps. Для node/npm это - uses: actions/setup-node@v3, для hugo - - uses: peaceiris/actions-hugo@v2, остальное - в гугле по запросу \u0026ldquo;github actions install \u0026lt;something\u0026gt;\u0026rdquo;.\nQ: Всё равно почему-то не заработало, что не так?\nA: Пишите в комментарии ниже, посмотрю рано или поздно. Только приложите ссылку на репу.\nUPD #1 На момент публикации этой статьи появился скорее всего более простой способ настроить CI - поставить Source не Deploy from a branch, а Github Actions. Сейчас эта фича в бете, и подробно с ней я не разбиралась.\nPlease enable JavaScript to view the comments powered by Disqus. ","permalink":"https://lerarosalene.github.io/posts/gh-pages-ci/","summary":"И желательно, автоматически.","title":"А как деплоиться на Github Pages?"},{"content":"Chrome (2019 и далее), Firefox (2022 и далее)* * - caniuse\nfunction parse(css) { const stylesheet = new CSSStyleSheet(); return stylesheet.replace(css) .then(() =\u0026gt; { return stylesheet.cssRules; }); } Fallback (Safari, IE, etc.)* * - caniuse 1, caniuse 2\nasync function parse(css) { // don\u0026#39;t forget to pass it through babel if you want really old browsers const frame = document.createElement(\u0026#39;iframe\u0026#39;); frame.style.display = \u0026#39;none\u0026#39;; const loaded = new Promise((resolve, reject) =\u0026gt; { frame.addEventListener(\u0026#39;load\u0026#39;, () =\u0026gt; resolve()); frame.addEventListener(\u0026#39;error\u0026#39;, () =\u0026gt; reject()); }); document.body.appendChild(frame); await loaded; const style = frame.contentDocument.createElement(\u0026#39;style\u0026#39;); style.appendChild(frame.contentDocument.createTextNode(css)); frame.contentDocument.head.appendChild(style); const targetStyleSheet = Array.from(frame.contentDocument.styleSheets) .find(styleSheet =\u0026gt; styleSheet.ownerNode === style); document.body.removeChild(frame); return targetStyleSheet.cssRules; } Please enable JavaScript to view the comments powered by Disqus. ","permalink":"https://lerarosalene.github.io/posts/css-parsing-in-browser/","summary":"1 (один) правильный метод и 1 (один) грязный хак в качестве fallback\u0026rsquo;а","title":"Парсинг CSS средствами браузера"}]